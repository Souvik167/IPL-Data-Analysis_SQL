SELECT DISTINCT ib.batsman,
		s.season AS season_played,
		m.match AS match,
		b.ovar_boundaries AS sixes,
		ROUND((b.ovar_boundaries*1.0/m.match),2) as "six_per_match",
		a.boundaries AS fours,
		ROUND((a.boundaries*1.0/m.match),2) as four_per_match,
		(ROUND((b.ovar_boundaries*1.0/m.match),2)+ROUND((a.boundaries*1.0/m.match),2))/2 AS avg_boundary
FROM ipl_balls AS ib
JOIN (SELECT batsman,
	  		 COUNT(batsman_runs) AS boundaries 
	  FROM ipl_balls 
	  WHERE batsman_runs=4 
	  GROUP BY batsman ) AS a
ON ib.batsman=a.batsman		
JOIN (SELECT batsman,
	  		COUNT(batsman_runs) AS ovar_boundaries 
	  FROM ipl_balls 
	  WHERE batsman_runs=6 
	  GROUP BY batsman ) AS b		
ON ib.batsman=b.batsman
JOIN (SELECT ib.batsman,
			COUNT(DISTINCT DATE_PART('year', im.date)) AS Season
		FROM ipl_balls AS ib 
	  	JOIN ipl_matches AS im
		ON ib.id=im.id
		GROUP BY batsman) AS s
ON ib.batsman=s.batsman 
JOIN(select distinct batsman, count(distinct id) as match from ipl_balls
group by batsman order by match desc) as m		
ON ib.batsman=m.batsman
WHERE s.season>2
ORDER BY avg_boundary DESC LIMIT 10
